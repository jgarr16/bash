#!/bin/sh

# sh -c "$(curl -fsSL https://raw.githubusercontent.com/jgarr16/bash/main/usage.sh)"

# This script sends a UDP message to Splunk that includes a date/time-stamped
# event with the current bandwith utilization for the month; thereby allowing
# tracking and monitoring of potential usage overuns.

# Change history:
# 12/25/2020 - John Garrigues - original code.
# 12/28/2020 - John Garrigues - added in the ability to read a usage value if none provided
# 02/07/2021 - John Garrigues - changed static ip to hostname because I've got DNS on my LAN now

Help()
{
	# Display Help messages on the command line
	echo "This script sends a UDP message to Splunk that includes a date/time-stamped event with the current bandwith utilization for the month; thereby allowing tracking and monitoring of potential usage overuns."
	echo
	echo "Syntax: scriptTemplate [-u | -h]"
	echo "options:"
	echo "-u     Submit the bandwidth USAGE (in Gigabytes)."
	echo "-h     Print this HELP message."
	echo
}


if [ $# -eq 0 ]; then
	read -p "What is the Usage? " usage_gigs
	# USAGE=${1?Error: no Options provided}
	if [[ $usage_gigs -eq 0 ]]; then
		USAGE=${usage_gigs?Error: Usage cannot be empty}
		exit;
	else
		echo "$(date +%FT%T.000-08:00) Xfinity usage: $usage_gigs GB" | netcat -w1 -u katchi_syn 9993
		echo "$usage_gigs GB"
		exit;
	fi
fi


while getopts ":uh" option; do
	case $option in
	u) # Enter bandwidth USAGE (in Gigabytes).
	if [[ $2 -eq 0 ]]; then
		USAGE=${2?Error: no Usage given}
	fi
	echo "$(date +%FT%T.000-08:00) Xfinity usage: $2 GB" | netcat -w1 -u katchi_syn 9993
   	echo "$2 GB"
   	exit;;
	h) # Print help message.
   	Help
	exit;;
	\?) # incorrect option
   	echo "Error: Invalid option. Try -h instead?"
  	exit;;
	esac
done




# if [ $# -eq 0 ]; then
#	USAGE=${1?Error: no Options provided}
# fi
# USAGE=${2?Error: no Usage amount given}

